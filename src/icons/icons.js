Object.defineProperty(exports, "__esModule", { value: true })

function _interopDefault(ex) {
  return ex && typeof ex === "object" && "default" in ex ? ex.default : ex
}

const _mergeJSXProps = _interopDefault(
  require("babel-helper-vue-jsx-merge-props")
)

const MessengerIcon = {
  name: "MessengerIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "25",
            height: "24",
            viewBox: "0 0 25 24",
            fill: "none",
            stroke: "currentColor",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather feather-messenger",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M0.789722 11.6362C0.789722 5.21623 5.98991 0 12.3938 0C18.7978 0 23.9979 5.21623 23.9979 11.6362C23.9979 18.0562 18.7978 23.2724 12.3938 23.2724C10.4197 23.2724 8.59 22.7749 6.96895 21.9242L1.92927 23.8984C0.821822 24.3317 -0.205375 23.3045 0.0353747 22.2292V22.2131L1.57617 15.8413C1.07862 14.5413 0.789722 13.1289 0.789722 11.6362ZM12.4259 1.0272C6.61585 1.0272 1.88112 5.77798 1.88112 11.6202C1.88112 13.0807 2.17002 14.445 2.69967 15.729L2.82807 16.0499L1.23912 22.6465L6.68005 20.5118L7.1134 20.7686C8.6863 21.6835 10.4839 22.2131 12.4259 22.2131C18.236 22.2131 22.9708 17.4623 22.9708 11.6202C22.9708 5.77798 18.236 1.0272 12.4259 1.0272Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M12.6024 14.5412L11.511 11.1225L7.88375 13.9152C7.5788 14.156 7.1294 14.1078 6.9047 13.7868C6.66395 13.4819 6.7121 13.0485 7.0331 12.8078L12.2654 8.76318L13.3407 12.1818L16.968 9.37308C17.273 9.13233 17.7224 9.19653 17.9631 9.50148C18.2039 9.80643 18.1397 10.2558 17.8347 10.4966L12.6024 14.5412Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const ComissionsIcon = {
  name: "ComissionsIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "20",
            height: "24",
            viewBox: "0 0 20 24",
            fill: "none",
            stroke: "currentColor",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather feather-comissions",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M9.77502 23.9941C8.3912 23.9941 7.00739 23.9949 5.62357 23.9941C3.99475 23.9932 2.72921 23.2443 1.71965 22.0352C0.535212 20.6167 0.216714 18.9391 0.378075 17.1423C0.608711 14.5688 1.60729 12.2688 2.95816 10.1133C3.61459 9.06544 4.38337 8.08771 5.09809 7.0762C5.20961 6.91746 5.33802 6.85498 5.54247 6.85498C8.37262 6.86342 11.2028 6.8592 14.0338 6.86596C14.1504 6.86596 14.3083 6.91408 14.3768 6.99683C16.063 9.06966 17.4992 11.2911 18.4167 13.819C18.9439 15.2713 19.2387 16.7632 19.2066 18.3176C19.1551 20.7561 17.6336 22.975 15.4201 23.7416C14.9825 23.8936 14.4993 23.973 14.0355 23.9831C12.6145 24.0135 11.1943 23.9941 9.77502 23.9941ZM8.91584 10.2678C8.76378 10.2914 8.63367 10.3125 8.50273 10.3319C7.28534 10.5101 6.34843 11.6052 6.34505 12.8523C6.34167 14.096 7.27689 15.2316 8.49343 15.3701C9.19041 15.4494 9.90006 15.4157 10.6046 15.4283C11.1082 15.4376 11.4824 15.7922 11.4875 16.271C11.4925 16.7683 11.1217 17.1356 10.6046 17.1389C10.1138 17.1423 9.62211 17.1221 9.13211 17.1449C8.66577 17.1668 8.33292 17.0131 8.09214 16.5969C7.86151 16.1975 7.33096 16.1021 6.93896 16.3436C6.56133 16.5766 6.42615 17.0714 6.64327 17.4699C6.86039 17.8676 7.13495 18.2324 7.54554 18.4325C7.96964 18.6385 8.42669 18.7778 8.91584 18.9644C8.91584 19.1307 8.91331 19.3798 8.91669 19.628C8.9226 20.1709 9.28165 20.5652 9.7708 20.5686C10.2591 20.5711 10.6258 20.1768 10.6325 19.6365C10.6359 19.3798 10.6334 19.124 10.6334 18.8707C10.8057 18.8462 10.9468 18.8276 11.087 18.8057C12.2732 18.6258 13.2092 17.5054 13.2033 16.2743C13.1974 15.0391 12.2563 13.8984 11.0668 13.7717C10.3605 13.6966 9.64238 13.727 8.92935 13.7126C8.42922 13.7025 8.06089 13.3403 8.06173 12.8548C8.06258 12.3676 8.42838 12.0054 8.93105 12.002C9.43963 11.9987 9.94906 12.0172 10.4576 11.9961C10.9062 11.9775 11.2197 12.1405 11.4495 12.5323C11.686 12.9359 12.2022 13.0397 12.5984 12.8025C12.9904 12.5677 13.1256 12.0696 12.8975 11.6584C12.5393 11.0116 12.0113 10.5717 11.2889 10.3843C11.0777 10.3294 10.8589 10.2999 10.6334 10.2568C10.6334 9.99589 10.6367 9.74682 10.6325 9.49774C10.6249 8.9599 10.2523 8.56391 9.76404 8.57151C9.27996 8.57911 8.92429 8.96243 8.91669 9.4893C8.91247 9.74851 8.91584 10.0052 8.91584 10.2678Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M9.76236 5.14418C8.52217 5.14418 7.28197 5.13996 6.04093 5.14925C5.86098 5.15094 5.77565 5.09099 5.69792 4.93394C5.10909 3.73668 4.50842 2.54449 3.91451 1.34891C3.67881 0.874398 3.74133 0.476718 4.09109 0.190489C4.42226 -0.0805413 4.82945 -0.0611217 5.23835 0.245371C6.3797 1.09983 8.07525 1.0897 9.20477 0.221729C9.58156 -0.0678763 9.96174 -0.0737867 10.3318 0.203998C11.528 1.10406 13.1383 1.10743 14.359 0.206531C14.6708 -0.0231268 14.9935 -0.069565 15.3322 0.119565C15.6491 0.296875 15.8003 0.582259 15.7665 0.943633C15.7538 1.08126 15.6972 1.22057 15.6355 1.34553C15.0399 2.5504 14.4359 3.75104 13.8428 4.95674C13.7668 5.11125 13.6722 5.14925 13.5117 5.1484C12.2613 5.14165 11.0118 5.14418 9.76236 5.14418Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const UsersAmgIcon = {
  name: "UsersAmgIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "31",
            height: "25",
            viewBox: "0 0 31 25",
            fill: "none",
            stroke: "currentColor",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather feather-users-amg",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M15.5048 24.1584C12.4632 24.1335 9.50435 23.5922 6.63345 22.4778C6.03961 22.2475 5.71269 21.8015 5.70648 21.1207C5.69614 19.9314 5.68165 18.7411 5.73338 17.5541C5.80787 15.8508 6.66241 14.6219 7.87492 13.6641C9.14949 12.6587 10.5979 12.0777 12.1156 11.6919C12.2345 11.6613 12.3928 11.7067 12.5056 11.7725C14.5023 12.9435 16.4949 12.9424 18.4947 11.7793C18.6178 11.7078 18.7916 11.6624 18.9219 11.6976C20.51 12.1231 22.0298 12.7313 23.3416 13.84C24.6389 14.9351 25.3352 16.3626 25.3072 18.1873C25.2938 19.0928 25.3083 19.9995 25.3041 20.9051C25.3 21.8129 25.0331 22.2305 24.2644 22.5232C21.4297 23.6047 18.5071 24.1346 15.5048 24.1584Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M20.3044 6.02702C20.3044 8.94904 18.1308 11.332 15.4854 11.3082C12.8338 11.2844 10.7026 8.93202 10.7026 6.02929C10.7026 3.11067 12.8731 0.73107 15.5216 0.744687C18.1628 0.758304 20.3044 3.12429 20.3044 6.02702Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M6.66153 5.37897C8.42338 5.36762 9.8428 6.90409 9.85211 8.83319C9.86142 10.7646 8.45959 12.3396 6.71636 12.3589C4.97106 12.3771 3.51337 10.8156 3.50095 8.9149C3.4875 6.95516 4.88726 5.39032 6.66153 5.37897Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M24.3154 5.37897C26.072 5.36762 27.5008 6.91657 27.507 8.8366C27.5132 10.7623 26.1031 12.343 24.364 12.3589C22.6114 12.3748 21.1672 10.8213 21.1599 8.91036C21.1517 6.93814 22.5349 5.38918 24.3154 5.37897Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M26.5179 21.1612C26.5179 20.9036 26.521 20.6812 26.5179 20.4599C26.4992 19.3013 26.5323 18.1382 26.4454 16.9853C26.3554 15.7869 25.8578 14.7441 25.1626 13.817C25.1305 13.775 25.1046 13.7262 25.0953 13.7103C25.594 13.4788 26.0875 13.2462 26.5851 13.0249C26.6472 12.9977 26.7341 13.0147 26.8055 13.034C27.8783 13.3211 28.8994 13.741 29.7684 14.5126C30.5733 15.2275 31.0296 16.1342 30.9985 17.303C30.9799 18.0099 30.9923 18.718 30.9965 19.425C30.9985 19.7439 30.8775 19.9822 30.6095 20.0922C29.3039 20.6313 27.959 20.9864 26.5179 21.1612Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M5.92587 13.7101C5.14995 14.6906 4.64509 15.8322 4.53232 17.1303C4.45163 18.0563 4.49715 18.9959 4.48784 19.9298C4.48473 20.3224 4.4868 20.7162 4.4868 21.1985C3.74709 21.0453 3.05187 20.9318 2.37009 20.7525C1.74522 20.5891 1.13483 20.361 0.520301 20.1511C0.172689 20.0331 -0.0042203 19.7811 0.00612529 19.3613C0.0216437 18.7247 0.0350929 18.0858 0.00509073 17.4515C-0.061121 16.0523 0.52237 15.0378 1.5321 14.2707C2.33699 13.6602 3.23912 13.2914 4.18471 13.0395C4.26644 13.0179 4.36679 13.0032 4.44025 13.035C4.92752 13.2483 5.40963 13.4741 5.92587 13.7101Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}
const AmgIcon = {
  name: "AmgIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "44",
            height: "54",
            viewBox: "0 0 44 54",
            fill: "none",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather feather-amg",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M34.5961 45.3297C34.643 47.2444 33.7259 48.3671 31.857 48.5615C31.5062 48.5984 31.1208 48.3023 30.436 48.0376C31.8436 47.2724 33.536 47.2713 33.2522 45.1085C32.0927 46.7742 30.9141 46.0357 29.8652 45.3275C28.1906 44.1959 26.5988 42.9402 24.9823 41.7226C24.6159 41.4467 24.2931 41.1115 23.7412 40.6178C24.0149 42.9179 25.1968 44.4763 26.3653 46.019C27.4891 47.5036 28.6364 48.9782 29.8763 50.3656C30.6628 51.2459 30.0428 51.8335 29.5513 52.2938C29.0028 52.8065 28.3113 52.897 27.7583 52.0469C27.2053 51.199 26.5362 50.4204 25.8671 49.6563C25.0929 48.7704 24.4729 47.8756 24.7432 46.5943C24.7991 46.3273 24.6137 45.9006 24.3981 45.7017C22.528 43.9825 21.7137 41.8008 21.3562 39.3432C21.1149 37.682 20.6513 36.0533 20.0347 34.3911C19.8369 37.1078 19.6381 39.8246 19.4404 42.5414C17.663 37.5804 17.9401 32.5288 18.2786 27.3332C17.9792 27.6862 17.6552 28.0213 17.3849 28.3944C15.6199 30.8342 14.4659 33.5555 14.0794 36.5281C13.7107 39.3711 14.5988 41.9672 16.9894 43.5669C19.8213 45.4615 21.6232 48.2152 23.7758 50.6874C24.4405 51.4515 25.056 52.258 25.6939 53.0456C25.6503 53.1707 25.6079 53.2947 25.5643 53.4198C25.1052 53.2925 24.5299 53.298 24.2048 53.0154C22.5481 51.5743 21.0166 49.9847 19.3264 48.5861C17.052 46.7015 15.0591 44.6148 13.7521 41.9069C12.7802 43.4273 13.0695 47.708 14.7429 49.6507C16.7213 51.9463 19.2493 52.6389 22.3627 52.4144C18.7176 53.9024 15.1496 51.638 13.5622 49.2686C13.5152 49.1994 13.4918 49.1145 13.4482 49.0419C10.9593 44.9332 10.9638 44.9343 12.0976 39.4705C12.4149 37.9423 12.6942 36.4074 13.0036 34.8111C12.0898 34.4882 11.4084 34.5474 10.8532 35.4489C10.1986 36.5135 9.42328 37.5033 8.68264 38.55C7.29296 35.5741 9.49366 33.666 10.4376 31.262C8.99878 32.216 7.55883 33.1701 5.90664 34.2648C5.90664 33.5398 5.78711 32.9399 5.93121 32.4115C6.26411 31.1905 6.74558 30.0098 7.12093 28.7999C7.24046 28.4145 7.31977 27.9643 7.24046 27.5812C7.09635 26.8863 7.14997 26.3635 7.79789 25.9323C8.01349 25.7893 8.1509 25.3827 8.1576 25.0934C8.19111 23.5797 8.12632 22.0627 8.18218 20.5501C8.23692 19.061 9.84331 17.344 11.3067 16.9698C11.8943 16.8201 12.4093 16.4068 12.988 16.1968C14.2056 15.7533 15.421 15.2651 16.6789 14.9735C18.7958 14.4831 20.9239 14.377 23.0665 15.026C25.17 15.6639 26.5451 16.9754 27.4031 18.9739C27.6824 19.6252 28.1739 20.2753 28.738 20.6998C30.6963 22.1733 32.7518 23.516 34.7112 24.9873C35.0742 25.2598 35.3423 25.8955 35.3435 26.3635C35.3446 27.2438 35.8071 27.5745 36.4773 27.98C38.7897 29.3764 41.0854 30.8107 43.295 32.3613C43.7485 32.6796 44.0066 33.5644 43.9999 34.1844C43.9887 35.211 43.7497 36.2488 43.5006 37.2553C43.0247 39.1734 42.5745 41.1093 41.921 42.9704C41.368 44.5455 40.1202 45.3677 38.3797 45.332C37.1967 45.3107 36.0137 45.3297 34.5961 45.3297ZM41.6495 39.1309C41.8405 39.1454 42.0316 39.16 42.2226 39.1745C42.2952 38.1233 42.3678 37.0721 42.4449 35.9461C41.7087 36.0321 41.311 36.079 40.8273 36.1348C40.8809 35.7629 40.9178 35.5015 40.9681 35.1518C39.4779 35.4467 39.1215 34.5106 38.8355 33.4482C40.1626 33.7845 41.4194 34.1028 42.6839 34.4234C43.0571 33.666 43.1051 33.5957 42.2304 32.9958C39.5918 31.185 36.9119 29.4345 34.1794 27.6136C34.7212 26.6942 34.3727 26.0016 33.3684 25.3794C32.0413 24.5572 30.856 23.5015 29.5211 22.6938C28.6933 22.1923 27.727 21.7968 26.7764 21.6427C23.9814 21.188 23.1525 21.8583 22.9738 24.6633C22.9213 25.4799 23.1871 26.3211 23.3357 27.1455C23.529 28.219 23.7177 29.2948 23.9769 30.3527C24.0674 30.7214 24.2875 31.1269 24.5723 31.3693C26.1184 32.6875 27.6589 34.0191 29.291 35.2266C30.2673 35.9494 30.4215 36.8431 30.4193 37.9479C29.5434 37.8127 28.7648 37.6932 27.9337 37.5647C27.2165 41.0702 29.3748 43.1726 31.4124 45.5487C32.8445 43.7971 34.7458 43.8808 36.6672 44.0339C37.0046 44.0607 37.3453 44.0439 37.6838 44.0484C40.4084 44.083 41.6372 42.4219 40.719 39.4705C38.3786 40.1028 36.0215 40.7384 33.6253 41.3864C33.336 40.4815 33.6466 40.0883 34.5201 40.0201C35.4887 39.9442 36.4784 39.9196 37.4146 39.6928C38.8523 39.3454 40.6843 39.8179 41.4283 37.7424C41.5222 38.3311 41.5858 38.731 41.6495 39.1309ZM19.1845 24.6767C18.6394 23.907 18.1546 23.1664 17.6139 22.4682C15.8433 20.1837 14.095 19.7089 11.3804 20.74C9.25236 21.5477 8.66253 22.6369 9.26577 24.8487C9.9405 27.3242 11.5246 29.211 13.3521 30.9291C12.8919 29.4389 12.2373 28.0213 11.8619 26.5322C11.5592 25.3313 11.4933 24.0433 11.529 22.7989C11.5424 22.3375 12.2618 21.4572 12.4629 21.5108C13.9476 21.9018 15.383 22.4805 16.833 22.9999C16.7984 23.1195 16.7638 23.239 16.728 23.3585C15.8254 23.4099 14.9239 23.4624 13.5923 23.5384C14.0135 24.2611 14.1844 25.0185 14.5977 25.1906C17.806 26.5266 17.8206 26.492 19.1845 24.6767ZM25.8302 20.0731C24.9086 16.9575 23.7647 15.8248 21.3171 15.8851C18.8751 15.9443 16.4409 16.2973 14.0034 16.5218C14.0001 16.6503 13.9978 16.7788 13.9945 16.9072C17.9814 17.4915 22.0276 17.8523 25.8302 20.0731ZM26.4915 37.5178C26.5876 37.4296 26.6848 37.3402 26.7808 37.252C24.3277 33.9833 21.7438 30.7884 20.7328 26.5858C19.0415 29.3741 19.0773 30.8621 21.1752 32.9511C22.8263 34.5944 24.7109 36.0041 26.4915 37.5178ZM11.0062 18.3885C11.033 18.5002 11.0598 18.6108 11.0866 18.7225C14.9876 19.4442 18.8885 20.167 22.9447 20.9177C22.0365 19.3325 20.6334 18.7963 19.1075 18.6376C16.8018 18.3975 14.4815 18.2902 12.1658 18.1629C11.7848 18.1416 11.3939 18.3081 11.0062 18.3885ZM10.5069 30.1248C9.77517 29.7629 9.23337 29.4948 8.57987 29.1708C8.26596 29.9617 7.99115 30.6532 7.59235 31.6541C8.71168 31.0665 9.50818 30.6488 10.5069 30.1248ZM19.0449 22.2459C20.4558 23.2211 21.2635 23.1373 22.0019 21.8739C20.9786 22.0024 20.0436 22.1197 19.0449 22.2459ZM14.1185 28.2604C14.1185 29.0703 14.1185 29.6959 14.1185 30.584C14.6558 29.955 15.0155 29.535 15.4367 29.0424C14.9496 28.753 14.5765 28.5318 14.1185 28.2604Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M12.7724 52.3696C10.7672 51.1028 8.76308 49.836 6.75899 48.567C6.72436 48.5458 6.7009 48.5067 6.67409 48.4732C5.96138 47.6007 6.08761 42.8184 6.84613 41.9571C7.73423 40.9495 8.62009 39.9407 9.73719 39.0146C9.29817 41.7002 8.85803 44.3868 8.41901 47.0723C8.48492 47.0924 8.55083 47.1114 8.61674 47.1315C8.8558 46.7048 9.09598 46.2792 9.46239 45.6268C10.7147 47.8621 11.8832 49.9489 13.0516 52.0356C12.96 52.1473 12.8662 52.259 12.7724 52.3696Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M4.96269 32.4504C4.12151 34.3941 3.27922 36.3368 2.43804 38.2805C2.46261 38.3096 2.48719 38.3398 2.51177 38.3688C2.97648 37.7935 3.44008 37.2182 3.9048 36.6418C3.98746 36.663 4.07013 36.6853 4.15168 36.7065C3.92825 40.0344 3.70483 43.3623 3.48141 46.6901C3.36523 46.7415 3.24794 46.794 3.13176 46.8454C2.52629 45.9752 1.77559 45.1708 1.33992 44.2224C-0.49883 40.221 -0.49883 40.1852 1.67394 36.3502C2.49501 34.9002 3.51381 33.563 4.44324 32.1733C4.61751 32.2672 4.79066 32.3588 4.96269 32.4504Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M4.03436 25.9535C4.5918 25.9915 4.96156 26.0161 5.46091 26.0496C4.23097 28.1609 3.05801 30.1751 1.88506 32.1881C1.77111 32.1646 1.65717 32.1401 1.54322 32.1166C1.46279 30.0299 1.36448 27.9431 1.32092 25.8552C1.31533 25.5737 1.51083 25.2062 1.73201 25.0141C3.10605 23.8243 4.50355 22.6592 5.92115 21.522C6.14122 21.3455 6.50763 21.35 6.8059 21.2695C6.86287 21.5935 6.91314 21.9197 6.97905 22.2425C7.40243 24.3181 6.16692 25.147 4.45216 25.6262C4.3438 25.6575 4.26002 25.7726 4.03436 25.9535Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M4.82092 40.8324C4.9237 39.4226 4.78182 37.9156 5.21526 36.5974C5.51129 35.6948 6.60717 35.0536 7.51314 34.123C6.5368 36.555 5.67662 38.6998 4.82092 40.8324Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M29.4194 28.8603C30.2081 28.7776 30.9968 28.6939 31.7732 28.6123C32.287 29.0726 32.8098 29.5417 33.4868 30.1472C31.9821 29.8031 30.646 29.4982 29.3099 29.1932C29.3457 29.0826 29.3825 28.9709 29.4194 28.8603Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M31.5454 25.7725C32.0101 26.4092 32.391 26.9331 32.772 27.4559C32.219 27.6872 31.6649 27.9173 31.2594 28.0871C31.3521 27.3386 31.4258 26.7421 31.5454 25.7725Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M25.523 5.69143C26.3586 5.38758 26.8501 4.40341 26.6367 3.37456C26.4066 2.25969 25.437 1.51793 24.4707 1.71789C23.5055 1.91785 22.909 2.98357 23.1402 4.09844C23.2128 4.45033 23.3603 4.76535 23.5569 5.02564L21.5338 6.05896L18.9924 3.74543C19.4057 3.2863 19.6001 2.59147 19.4515 1.87428C19.2214 0.759414 18.2518 0.0176568 17.2855 0.217618C16.3203 0.41758 15.7237 1.4833 15.955 2.59817C16.0555 3.08411 16.2968 3.49967 16.6163 3.79682L14.267 6.3427L11.1313 4.95191C11.3157 4.54751 11.3771 4.06157 11.2743 3.56558C11.0442 2.45071 10.0745 1.70895 9.10825 1.90891C8.14308 2.10888 7.54654 3.17459 7.77778 4.28946C7.92524 5.00441 8.37879 5.5652 8.93845 5.82325L7.59346 9.04498L5.37154 9.15334C5.47208 8.8115 5.49442 8.42945 5.41399 8.0407C5.18387 6.92583 4.21422 6.18407 3.24793 6.38403C2.28275 6.584 1.68621 7.64971 1.91745 8.76458C2.14087 9.84482 3.05913 10.5732 3.99415 10.4347L6.70536 14.4808C6.70536 14.4808 14.7105 6.63427 25.0918 10.9228L25.523 5.69143ZM23.911 8.80703C22.7749 8.46632 14.5575 6.30919 6.66962 12.4309L6.78915 12.6231L5.22297 10.3509L8.28718 10.2023L10.0801 5.91038C10.1539 5.88804 10.2254 5.86235 10.2935 5.82995L14.5519 7.71786L17.7189 4.28388C17.7982 4.28835 17.8775 4.28723 17.9568 4.27941L21.4288 7.4397L24.4115 5.91597L23.911 8.80703Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M10.9682 15.3352C10.9515 15.3096 10.9436 15.2961 10.928 15.2693C11.2263 15.0593 11.2598 14.98 11.1682 14.8236C10.861 14.2952 10.7068 14.0316 10.3996 13.5032C10.3024 14.4215 10.2857 14.8772 10.3091 15.7687C10.2656 15.7988 10.2443 15.8134 10.2019 15.8435C9.37858 15.5296 8.94738 15.3978 8.05257 15.1934C8.4201 15.6324 8.60442 15.8513 8.97307 16.2904C9.12388 16.4702 9.23671 16.4568 9.56513 16.2222C9.58412 16.2468 9.59418 16.2591 9.61317 16.2825C9.25346 16.5652 9.07696 16.7138 8.73624 17.0254C8.71502 17.0031 8.70496 16.9908 8.68374 16.9685C8.95296 16.6892 8.98424 16.6266 8.85354 16.4758C8.47596 16.0379 8.28828 15.8189 7.9107 15.3822C7.80234 15.2559 7.70404 15.2772 7.39013 15.5397C7.36891 15.5173 7.35885 15.505 7.33875 15.4827C7.75878 15.0995 7.97549 14.9174 8.4201 14.5734C9.12611 14.7633 9.46795 14.875 10.127 15.1319C10.1382 14.4226 10.1617 14.0629 10.2488 13.3379C10.7258 13.0586 10.9693 12.929 11.4653 12.6899C11.4787 12.7179 11.4854 12.7313 11.4988 12.7592C11.1481 12.9458 11.1023 13.0329 11.2084 13.2384C11.4508 13.7065 11.5715 13.9411 11.8139 14.4092C11.9178 14.6091 11.9803 14.6438 12.3367 14.4952C12.3501 14.5231 12.3568 14.5365 12.3702 14.5644C11.7949 14.8426 11.5145 14.9968 10.9682 15.3352Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M12.5546 14.4776C12.5412 14.4496 12.5356 14.4362 12.5222 14.4083C12.8406 14.2363 12.9076 14.1715 12.8316 13.9961C12.6026 13.4644 12.4876 13.1985 12.2586 12.6667C12.1904 12.5081 12.0675 12.5092 11.7067 12.6612C11.6933 12.6332 11.6877 12.6198 11.6743 12.5919C12.3658 12.269 12.7199 12.1283 13.4393 11.8848C13.4494 11.9138 13.4539 11.9283 13.4639 11.9574C13.0886 12.0937 13.0003 12.1841 13.0606 12.345C13.2617 12.8879 13.3634 13.1594 13.5645 13.7023C13.6337 13.89 13.7309 13.8855 14.0806 13.7838C14.0906 13.8129 14.0951 13.8274 14.1051 13.8565C13.474 14.0698 13.1634 14.1938 12.5546 14.4776Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M16.1976 13.3133C16.192 13.2831 16.1886 13.2675 16.183 13.2373C16.488 13.1748 16.5416 13.1502 16.536 13.1111C16.5305 13.0776 16.4981 13.0519 16.3942 12.9938C16.0021 12.7782 15.7988 12.6765 15.3798 12.4877C15.3329 12.5302 15.3106 12.5514 15.2637 12.5939C15.3195 12.8284 15.3463 12.9469 15.4022 13.1815C15.4368 13.3278 15.515 13.3446 15.858 13.301C15.8647 13.3311 15.8669 13.3468 15.8736 13.3769C15.2469 13.5065 14.9375 13.5881 14.3275 13.7836C14.3186 13.7545 14.313 13.74 14.3041 13.7098C14.6347 13.5814 14.6861 13.5322 14.637 13.3635C14.475 12.805 14.3934 12.5257 14.2315 11.9672C14.1778 11.784 14.0739 11.7717 13.7154 11.8733C13.7064 11.8443 13.7008 11.8298 13.6919 11.7996C14.3879 11.5762 14.742 11.4835 15.4569 11.336C15.4636 11.3662 15.4659 11.3818 15.4726 11.412C15.0849 11.508 15.0257 11.584 15.0693 11.7661C15.1318 12.0331 15.1642 12.1671 15.2268 12.4341C15.5865 12.0766 15.7764 11.9035 16.1763 11.5684C16.3227 11.4466 16.3662 11.4064 16.3584 11.3583C16.3495 11.2969 16.2813 11.2824 16.0892 11.3047C16.0144 11.3137 15.9764 11.3181 15.9015 11.3282C15.8959 11.298 15.8937 11.2824 15.8881 11.2522C16.5036 11.1405 16.8153 11.0992 17.4387 11.0444C17.4409 11.0746 17.4431 11.0902 17.4454 11.1215C16.917 11.2053 16.688 11.2679 15.858 12.0476C16.5651 12.3861 16.9002 12.576 17.5269 12.9848C17.5884 13.0251 17.6476 13.0351 17.7671 13.0295C17.7693 13.0597 17.7704 13.0753 17.7727 13.1066C17.1393 13.1558 16.8231 13.1982 16.1976 13.3133Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M19.5689 13.0743C19.57 13.043 19.5711 13.0285 19.5722 12.9972C19.6337 12.9961 19.6649 12.9961 19.7264 12.995C19.8861 12.9939 19.9498 12.9738 19.9543 12.9067C19.9587 12.8397 19.9096 12.7269 19.7532 12.4755C19.3052 12.4521 19.0818 12.4487 18.635 12.4577C18.6104 12.5001 18.5981 12.5213 18.5724 12.5638C18.5154 12.661 18.4272 12.7928 18.4294 12.8665C18.4317 12.947 18.5389 12.9749 18.8226 12.9849C18.8226 13.0162 18.8226 13.0307 18.8238 13.062C18.4384 13.0654 18.2451 13.0732 17.8608 13.1011C17.8586 13.0698 17.8575 13.0553 17.8552 13.024C18.0731 12.9838 18.139 12.9246 18.3132 12.6275C18.7199 11.9393 18.9466 11.6008 19.4493 10.9429C19.5108 10.9451 19.5409 10.9451 19.6024 10.9485C20.0626 11.6098 20.2704 11.9483 20.639 12.6353C20.8513 13.033 20.9228 13.1112 21.1194 13.1402C21.1149 13.1704 21.1127 13.186 21.1082 13.2162C20.4927 13.1279 20.1844 13.0989 19.5689 13.0743ZM19.1879 11.5874C18.9857 11.8835 18.8897 12.0343 18.7065 12.3359C19.0963 12.3303 19.2918 12.3325 19.6828 12.3515C19.4951 12.0432 19.3957 11.8902 19.1879 11.5874Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M24.96 12.1461C24.7768 12.0936 24.6595 12.0891 24.5635 12.1304C24.0373 12.3527 23.7848 12.4745 23.3 12.7359C23.2408 12.947 23.2106 13.0521 23.1514 13.2632C23.0866 13.4944 23.138 13.5458 23.5033 13.6832C23.4944 13.7123 23.4899 13.7268 23.4799 13.7569C22.8308 13.5525 22.5024 13.4699 21.8422 13.3414C21.8478 13.3112 21.8511 13.2956 21.8567 13.2654C22.2577 13.3213 22.3192 13.2744 22.3706 13.0498C22.4074 12.8867 22.4264 12.8052 22.4633 12.641C22.193 12.1651 22.0455 11.9305 21.7282 11.468C21.6445 11.3474 21.4925 11.2524 21.3093 11.22C21.3138 11.1898 21.316 11.1742 21.3205 11.144C22.0477 11.2457 22.4108 11.315 23.1313 11.4959C23.1235 11.5261 23.1202 11.5406 23.1123 11.5708C23.0542 11.5585 23.0252 11.5529 22.966 11.5417C22.7504 11.4993 22.6722 11.4926 22.6577 11.5618C22.6521 11.5887 22.6979 11.6847 22.7448 11.7685C22.9336 12.1059 23.0218 12.2757 23.1883 12.6175C23.4653 12.4656 23.6072 12.393 23.8965 12.2533C24.0697 12.1684 24.1859 12.0802 24.2049 12.0221C24.2328 11.9372 24.1568 11.8824 23.7994 11.7607C23.8083 11.7316 23.8128 11.716 23.8217 11.687C24.2909 11.8255 24.5255 11.9037 24.988 12.0779C24.9757 12.1036 24.9701 12.1182 24.96 12.1461Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}
const DashboardIcon = {
  name: "DashboardIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": "2",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
          },
          class: "feather feather-dashboard",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M0 0h24v24H0z",
            fill: "none",
            stroke: "none",
          },
        }),
        h("path", {
          attrs: {
            d: "M3 3v18h18",
          },
        }),
        h("circle", {
          attrs: {
            cx: 9,
            cy: 9,
            r: 2,
          },
        }),
        h("circle", {
          attrs: {
            cx: 19,
            cy: 7,
            r: 2,
          },
        }),
        h("circle", {
          attrs: {
            cx: 14,
            cy: 15,
            r: 2,
          },
        }),
        h("line", {
          attrs: {
            x1: 10.16,
            y1: 10.62,
            x2: 12.5,
            y2: 13.5,
          },
        }),
        h("path", {
          attrs: {
            d: "M15.088 13.328l2.837 -4.586",
          },
        }),
      ]
    )
  },
}
const QuestionIcon = {
  name: "QuestionIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 384 512",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": "2",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
          },
          class: "feather feather-question",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}
const PhoneSlashIcon = {
  name: "PhoneSlashIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 640 512",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": "2",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
          },
          class: "feather feather-phone-slash",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M268.2 381.4l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48c-10.7 4.6-16.5 16.1-13.9 27.5l24 104c2.5 10.8 12.1 18.6 23.4 18.6 100.7 0 193.7-32.4 269.7-86.9l-80-61.8c-10.9 6.5-22.1 12.7-33.6 18.1zm365.6 76.7L475.1 335.5C537.9 256.4 576 156.9 576 48c0-11.2-7.7-20.9-18.6-23.4l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-12.2 26.1-27.9 50.3-46 72.8L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}
const ThListIcon = {
  name: "ThListIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 512 512",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": "2",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
          },
          class: "feather feather-th-list",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M149.333 216v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-80c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zM125.333 32H24C10.745 32 0 42.745 0 56v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zm80 448H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm-24-424v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24zm24 264H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}
const Edit2SlashIcon = {
  name: "Edit2SlashIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": "2",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
          },
          class: "feather feather-edit2-slash",
        },
        ctx.data,
      ]),
      [
        h("line", {
          attrs: {
            xl: "1",
            yl: "1",
            x2: "23",
            y2: "23",
          },
        }),
        h("path", {
          attrs: {
            d: "M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z",
          },
        }),
      ]
    )
  },
}

const OtherSourcesIcon = {
  name: "OtherSourcesIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": "2",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
          },
          class: "feather feather-other-sources",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M4 19.5A2.5 2.5 0 0 1 6.5 17H12",
          },
        }),
        h("path", {
          attrs: {
            d: "M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z",
          },
        }),
        h("circle", {
          attrs: {
            cx: "16",
            cy: "14",
            r: "4.5",
          },
        }),
        h("line", {
          attrs: {
            x1: "27",
            y1: "24",
            x2: "20",
            y2: "16",
          },
        }),
      ]
    )
  },
}

const ValidationInformationIcon = {
  name: "ValidationInformationIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": "2",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
          },
          class: "feather feather-validation-information",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z",
          },
        }),
        h("polyline", {
          attrs: {
            points: "14 2 14 8 20 8",
          },
        }),
        h("circle", {
          attrs: {
            cx: "16",
            cy: "16",
            r: "3.5",
          },
        }),
        h("line", {
          attrs: {
            x1: "16",
            y1: "13",
            x2: "8",
            y2: "13",
          },
        }),
        h("line", {
          attrs: {
            x1: "16",
            y1: "17",
            x2: "8",
            y2: "17",
          },
        }),
        h("line", {
          attrs: {
            x1: "13",
            y1: "9",
            x2: "8",
            y2: "9",
          },
        }),
        h("line", {
          attrs: {
            x1: "22",
            y1: "22",
            x2: "18.5",
            y2: "18.5",
          },
        }),
      ]
    )
  },
}

const CRInvalidIcon = {
  name: "CRInvalidIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": "2",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
          },
          class: "feather feather-cr-invalid",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z",
          },
        }),
        h("line", {
          attrs: {
            x1: "11",
            y1: "19",
            x2: "12.5",
            y2: "11",
          },
        }),
        h("polyline", {
          attrs: {
            points: "13 2 13 9 20 9",
          },
        }),
        h("polyline", {
          attrs: {
            points: "9,17 6,15 9,13",
          },
        }),
        h("polyline", {
          attrs: {
            points: "14,17 17,14 15,13",
          },
        }),
      ]
    )
  },
}

const FilePdfIcon = {
  name: "FilePdfIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 384 512",
            fill: "currentColor",
            "aria-hidden": "true",
            focusable: "false",
            role: "img",
          },
          class: "feather feather-file-pdf",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm250.2-143.7c-12.2-12-47-8.7-64.4-6.5-17.2-10.5-28.7-25-36.8-46.3 3.9-16.1 10.1-40.6 5.4-56-4.2-26.2-37.8-23.6-42.6-5.9-4.4 16.1-.4 38.5 7 67.1-10 23.9-24.9 56-35.4 74.4-20 10.3-47 26.2-51 46.2-3.3 15.8 26 55.2 76.1-31.2 22.4-7.4 46.8-16.5 68.4-20.1 18.9 10.2 41 17 55.8 17 25.5 0 28-28.2 17.5-38.7zm-198.1 77.8c5.1-13.7 24.5-29.5 30.4-35-19 30.3-30.4 35.7-30.4 35zm81.6-190.6c7.4 0 6.7 32.1 1.8 40.8-4.4-13.9-4.3-40.8-1.8-40.8zm-24.4 136.6c9.7-16.9 18-37 24.7-54.7 8.3 15.1 18.9 27.2 30.1 35.5-20.8 4.3-38.9 13.1-54.8 19.2zm131.6-5s-5 6-37.3-7.8c35.1-2.6 40.9 5.4 37.3 7.8z",
          },
        }),
      ]
    )
  },
}

const FileExcelIcon = {
  name: "FileExcelIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 384 512",
            fill: "currentColor",
            "aria-hidden": "true",
            focusable: "false",
            role: "img",
          },
          class: "feather feather-file-excel",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm212-240h-28.8c-4.4 0-8.4 2.4-10.5 6.3-18 33.1-22.2 42.4-28.6 57.7-13.9-29.1-6.9-17.3-28.6-57.7-2.1-3.9-6.2-6.3-10.6-6.3H124c-9.3 0-15 10-10.4 18l46.3 78-46.3 78c-4.7 8 1.1 18 10.4 18h28.9c4.4 0 8.4-2.4 10.5-6.3 21.7-40 23-45 28.6-57.7 14.9 30.2 5.9 15.9 28.6 57.7 2.1 3.9 6.2 6.3 10.6 6.3H260c9.3 0 15-10 10.4-18L224 320c.7-1.1 30.3-50.5 46.3-78 4.7-8-1.1-18-10.3-18z",
          },
        }),
      ]
    )
  },
}

const FileCsvIcon = {
  name: "FileCsvIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 384 512",
            fill: "currentColor",
            "aria-hidden": "true",
            focusable: "false",
            role: "img",
          },
          class: "feather feather-file-csv",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M369.83 97.98L285.94 14.1c-9-9-21.2-14.1-33.89-14.1H47.99C21.5.1 0 21.6 0 48.09v415.92C0 490.5 21.5 512 47.99 512h287.94c26.5 0 48.07-21.5 48.07-47.99V131.97c0-12.69-5.17-24.99-14.17-33.99zM255.95 51.99l76.09 76.08h-76.09V51.99zM336 464.01H47.99V48.09h159.97v103.98c0 13.3 10.7 23.99 24 23.99H336v287.95zM224 264v20.8c0 35.48 12.88 68.89 36.28 94.09 3.02 3.25 7.27 5.11 11.72 5.11s8.7-1.86 11.72-5.11c23.41-25.2 36.28-58.61 36.28-94.09V264c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v20.8c0 20.27-5.7 40.17-16 56.88-10.3-16.7-16-36.61-16-56.88V264c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8zm-104-8h-8c-26.51 0-48 21.49-48 48v32c0 26.51 21.49 48 48 48h8c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8h-8c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h8c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zm59.45 42.47c-1.38-1.19-2.12-2.55-2.12-3.84 0-3.12 4.45-6.62 10.41-6.62H200c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8h-12.27c-23.39 0-42.41 17.33-42.41 38.62 0 10.66 4.86 20.92 13.33 28.14l21.89 18.77c1.38 1.19 2.12 2.55 2.12 3.84 0 3.12-4.45 6.62-10.41 6.62H160c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h12.27c23.39 0 42.41-17.33 42.41-38.62 0-10.66-4.86-20.92-13.33-28.14l-21.9-18.77z",
          },
        }),
      ]
    )
  },
}

const FilePowerpointIcon = {
  name: "FilePowerpointIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 384 512",
            fill: "currentColor",
            "aria-hidden": "true",
            focusable: "false",
            role: "img",
          },
          class: "feather feather-file-powerpoint",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm72-60V236c0-6.6 5.4-12 12-12h69.2c36.7 0 62.8 27 62.8 66.3 0 74.3-68.7 66.5-95.5 66.5V404c0 6.6-5.4 12-12 12H132c-6.6 0-12-5.4-12-12zm48.5-87.4h23c7.9 0 13.9-2.4 18.1-7.2 8.5-9.8 8.4-28.5.1-37.8-4.1-4.6-9.9-7-17.4-7h-23.9v52z",
          },
        }),
      ]
    )
  },
}

const FileWordIcon = {
  name: "FileWordIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 384 512",
            fill: "currentColor",
            "aria-hidden": "true",
            focusable: "false",
            role: "img",
          },
          class: "feather feather-file-word",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm220.1-208c-5.7 0-10.6 4-11.7 9.5-20.6 97.7-20.4 95.4-21 103.5-.2-1.2-.4-2.6-.7-4.3-.8-5.1.3.2-23.6-99.5-1.3-5.4-6.1-9.2-11.7-9.2h-13.3c-5.5 0-10.3 3.8-11.7 9.1-24.4 99-24 96.2-24.8 103.7-.1-1.1-.2-2.5-.5-4.2-.7-5.2-14.1-73.3-19.1-99-1.1-5.6-6-9.7-11.8-9.7h-16.8c-7.8 0-13.5 7.3-11.7 14.8 8 32.6 26.7 109.5 33.2 136 1.3 5.4 6.1 9.1 11.7 9.1h25.2c5.5 0 10.3-3.7 11.6-9.1l17.9-71.4c1.5-6.2 2.5-12 3-17.3l2.9 17.3c.1.4 12.6 50.5 17.9 71.4 1.3 5.3 6.1 9.1 11.6 9.1h24.7c5.5 0 10.3-3.7 11.6-9.1 20.8-81.9 30.2-119 34.5-136 1.9-7.6-3.8-14.9-11.6-14.9h-15.8z",
          },
        }),
      ]
    )
  },
}

const FileChartIcon = {
  name: "FileChartIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "24",
            height: "24",
            viewBox: "0 0 384 512",
            fill: "currentColor",
            "aria-hidden": "true",
            focusable: "false",
            role: "img",
          },
          class: "feather feather-file-chart",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M196.66 363.33l-13.88-41.62c-3.28-9.81-12.44-16.41-22.78-16.41s-19.5 6.59-22.78 16.41L119 376.36c-1.5 4.58-5.78 7.64-10.59 7.64H96c-8.84 0-16 7.16-16 16s7.16 16 16 16h12.41c18.62 0 35.09-11.88 40.97-29.53L160 354.58l16.81 50.48a15.994 15.994 0 0 0 14.06 10.89c.38.03.75.05 1.12.05 6.03 0 11.59-3.41 14.31-8.86l7.66-15.33c2.78-5.59 7.94-6.19 10.03-6.19s7.25.59 10.19 6.53c7.38 14.7 22.19 23.84 38.62 23.84H288c8.84 0 16-7.16 16-16s-7.16-16-16-16h-15.19c-4.28 0-8.12-2.38-10.16-6.5-11.93-23.85-46.24-30.33-65.99-14.16zM369.83 97.98L285.94 14.1c-9-9-21.2-14.1-33.89-14.1H47.99C21.5.1 0 21.6 0 48.09v415.92C0 490.5 21.5 512 47.99 512h287.94c26.5 0 48.07-21.5 48.07-47.99V131.97c0-12.69-5.17-24.99-14.17-33.99zM255.95 51.99l76.09 76.08h-76.09V51.99zM336 464.01H47.99V48.09h159.97v103.98c0 13.3 10.7 23.99 24 23.99H336v287.95zM88 112h80c4.42 0 8-3.58 8-8V88c0-4.42-3.58-8-8-8H88c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8zm0 64h80c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8H88c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8z",
          },
        }),
      ]
    )
  },
}

const CustomFolderIcon = {
  name: "CustomFolderIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "62",
            height: "53",
            viewBox: "0 0 62 53",
            fill: "none",
            "aria-hidden": "true",
            focusable: "false",
            role: "img",
          },
          class: "feather feather-custom-folder-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M57.0014 7.28771C59.1792 7.2711 60.2938 8.70891 60.1892 10.4865C60.1649 10.8807 60.1847 11.2764 60.1847 11.7945C58.8273 10.7916 57.3502 10.8596 55.8791 10.8611C49.182 10.8671 42.4833 10.8581 35.7861 10.8732C35.2857 10.8747 34.9869 10.7327 34.72 10.2977C34.1255 9.3236 33.4612 8.39023 32.7378 7.30885C33.0866 7.30885 33.302 7.30885 33.5173 7.30885C41.3459 7.30885 49.1729 7.34359 57.0014 7.28771Z",
            fill: "#F4953A",
          },
        }),
        h("path", {
          attrs: {
            d: "M56.962 12.7128C59.2232 12.6932 60.2074 14.1733 60.2014 15.9358C60.168 26.4853 60.1862 37.0348 60.1847 47.5842C60.1847 49.1685 59.4855 50.2137 58.154 50.558C57.7718 50.6577 57.3563 50.6532 56.9559 50.6547C48.2993 50.6592 39.6428 50.6577 30.9862 50.6577C22.3099 50.6577 13.6336 50.6532 4.95736 50.6652C4.05197 50.6667 3.23302 50.5082 2.58848 49.8316C1.98185 49.1927 1.81503 48.4058 1.81655 47.554C1.8211 40.7425 1.81958 33.9296 1.81958 27.1181C1.81958 19.7221 1.81806 12.3277 1.81958 4.93326C1.81958 3.36858 2.54753 2.30986 3.86998 1.97004C4.17784 1.89151 4.50845 1.88698 4.82845 1.88698C11.0433 1.88244 17.2582 1.87187 23.4731 1.88849C25.7343 1.89453 27.5163 2.88831 28.7826 4.72786C30.4129 7.0945 32.0008 9.49135 33.5735 11.8958C33.9708 12.5014 34.4531 12.7461 35.1689 12.7445C42.4333 12.7294 49.6976 12.7748 56.962 12.7128Z",
            fill: "#FECD1A",
          },
        }),
        h("path", {
          attrs: {
            d: "M62 9.14721C62 22.3714 62 35.5956 62 48.8214C61.5511 49.6113 61.2114 50.4948 60.629 51.1729C59.6933 52.2603 58.3542 52.5322 56.9559 52.5322C46.5644 52.5292 36.1744 52.5307 25.7829 52.5307C18.8628 52.5307 11.9427 52.5307 5.02258 52.5292C3.76231 52.5292 2.58546 52.2739 1.60424 51.4146C0.598755 50.5356 0.0467244 49.4376 0.00881023 48.0994C-0.007872 47.5165 0.00426053 46.9335 0.00426053 46.3505C0.00426053 32.4874 0.00274397 18.6229 0.00426053 4.75978C0.0057771 2.47771 1.28879 0.758989 3.45293 0.186585C3.93217 0.0597191 4.44628 0.018941 4.94524 0.0174307C11.0797 0.00685854 17.2127 -0.0188166 23.3457 0.0234719C26.3 0.0446161 28.7538 1.25588 30.3144 3.77355C31.1257 5.08148 32.0038 5.49681 33.531 5.47869C41.358 5.38958 49.188 5.43791 57.015 5.4364C58.4406 5.4364 59.7797 5.75809 60.714 6.87874C61.2629 7.53723 61.5799 8.38451 62 9.14721ZM60.2014 15.936C60.2074 14.1735 59.2232 12.6934 56.962 12.713C49.6976 12.775 42.4333 12.7297 35.1689 12.7448C34.4531 12.7463 33.9708 12.5016 33.5735 11.896C32.0008 9.49156 30.4129 7.09471 28.7826 4.72807C27.5163 2.88852 25.7343 1.89474 23.4731 1.8887C17.2582 1.87208 11.0434 1.88265 4.82846 1.88719C4.50846 1.88719 4.17785 1.89172 3.86999 1.97025C2.54754 2.31007 1.81959 3.36879 1.81959 4.93347C1.81807 12.3279 1.81959 19.7224 1.81959 27.1183C1.81959 33.9298 1.82111 40.7428 1.81656 47.5542C1.81504 48.406 1.98186 49.1929 2.58849 49.8318C3.23303 50.5084 4.05198 50.667 4.95737 50.6654C13.6336 50.6534 22.3099 50.6579 30.9862 50.6579C39.6428 50.6579 48.2993 50.6594 56.9559 50.6549C57.3563 50.6534 57.7718 50.6579 58.154 50.5582C59.4855 50.2139 60.1847 49.1687 60.1847 47.5844C60.1862 37.035 60.168 26.4855 60.2014 15.936ZM60.1892 10.4869C60.2939 8.70923 59.1792 7.27142 57.0014 7.28803C49.1729 7.34391 41.3459 7.30917 33.5174 7.30917C33.302 7.30917 33.0867 7.30917 32.7378 7.30917C33.4612 8.39055 34.1255 9.32392 34.72 10.2981C34.9869 10.733 35.2857 10.875 35.7861 10.8735C42.4833 10.8584 49.182 10.8674 55.8791 10.8614C57.3502 10.8599 58.8273 10.7919 60.1847 11.7948C60.1847 11.2767 60.165 10.881 60.1892 10.4869Z",
            fill: "#353535",
          },
        }),
      ]
    )
  },
}
const CustomFileIcon = {
  name: "CustomFileIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "62",
            height: "53",
            viewBox: "0 0 62 53",
            fill: "none",
            "aria-hidden": "true",
            focusable: "false",
            role: "img",
          },
          class: "feather feather-custom-folder-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M26.384 53.0279C33.3082 53.0279 40.2343 53.0279 47.1586 53.0279C50.5548 53.0279 52.6565 50.9243 52.6565 47.5161C52.6584 37.691 52.6528 27.8659 52.6678 18.0408C52.6697 17.397 52.4665 16.9293 52.0206 16.4806C46.7653 11.213 41.5195 5.93596 36.2849 0.647561C35.8371 0.195027 35.3723 4.53705e-06 34.7326 4.59298e-06C24.9672 0.0151536 15.2018 0.00947438 5.43636 0.0113673C2.14359 0.0113676 0.00611451 2.14528 0.00423321 5.45503C-0.0014103 19.4836 -0.00140908 33.514 0.00423689 47.5426C0.00611877 50.9016 2.12854 53.0241 5.46647 53.026C12.4396 53.0298 19.4128 53.0279 26.384 53.0279ZM50.6846 18.5558C50.6846 18.8834 50.6846 19.0935 50.6846 19.3037C50.6846 28.7293 50.6865 38.1568 50.6846 47.5824C50.6846 49.7977 49.4409 51.0417 47.2319 51.0417C33.3082 51.0417 19.3826 51.0436 5.45894 51.0417C3.21233 51.0417 1.97802 49.8015 1.97802 47.5312C1.97613 33.5216 1.97613 19.512 1.97801 5.50237C1.97801 3.23591 3.21609 1.9976 5.46646 1.9957C14.7878 1.99381 24.1111 1.9957 33.4324 1.9957C33.6827 1.9957 33.931 1.9957 34.2302 1.9957C34.2302 2.34409 34.2302 2.59971 34.2302 2.85722C34.2302 6.23513 34.2283 9.61493 34.2302 12.9928C34.234 16.4313 36.3451 18.5501 39.7733 18.5558C43.132 18.5596 46.4887 18.5577 49.8473 18.5577C50.0995 18.5558 50.3535 18.5558 50.6846 18.5558ZM36.204 3.785C40.4319 8.03769 44.7069 12.3396 48.9047 16.5658C45.817 16.5658 42.5562 16.598 39.2973 16.5525C37.4853 16.526 36.2435 15.1987 36.2096 13.3659C36.1833 11.9496 36.204 10.5333 36.204 9.11696C36.204 7.28031 36.204 5.44367 36.204 3.785Z",
            fill: "#353535",
          },
        }),
        h("path", {
          attrs: {
            d: "M50.6845 18.5557C50.3515 18.5557 50.0993 18.5557 49.8453 18.5557C46.4867 18.5557 43.13 18.5595 39.7713 18.5538C36.3412 18.55 34.232 16.4293 34.2282 12.9908C34.2244 9.61291 34.2282 6.2331 34.2282 2.85519C34.2282 2.59768 34.2282 2.34206 34.2282 1.99367C33.929 1.99367 33.6807 1.99367 33.4304 1.99367C24.1091 1.99367 14.7858 1.99367 5.46446 1.99367C3.21409 1.99368 1.97601 3.23199 1.97601 5.50034C1.97413 19.51 1.97413 33.5196 1.97601 47.5292C1.97601 49.7995 3.21221 51.0397 5.45694 51.0397C19.3806 51.0416 33.3062 51.0416 47.2299 51.0397C49.4389 51.0397 50.6826 49.7938 50.6826 47.5803C50.6845 38.1548 50.6826 28.7273 50.6826 19.3017C50.6845 19.0915 50.6845 18.8813 50.6845 18.5557Z",
            fill: "#E6FDFF",
          },
        }),
        h("path", {
          attrs: {
            d: "M36.204 3.78508C36.204 5.44185 36.204 7.27849 36.204 9.11514C36.204 10.5314 36.1833 11.9477 36.2097 13.364C36.2435 15.1969 37.4854 16.5261 39.2973 16.5507C42.5562 16.5962 45.817 16.564 48.9047 16.564C44.705 12.3416 40.4301 8.03966 36.204 3.78508Z",
            fill: "#E6FDFF",
          },
        }),
      ]
    )
  },
}
const IncomesIcon = {
  name: "IncomesIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "20",
            height: "20",
            viewBox: "0 0 41 20",
            fill: "none",
            stroke: "currentColor",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather feather-incomes",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M14.0582 5.31017e-06C14.3455 0.209788 14.6633 0.387477 14.9154 0.634049C16.0668 1.76124 17.2018 2.90486 18.3376 4.04771C18.9122 4.62618 18.9114 5.43713 18.3478 5.93732C18.0879 6.16823 17.7772 6.26295 17.4327 6.26295C16.6609 6.26295 15.8899 6.2653 15.1181 6.26765C15.0993 6.26765 15.0813 6.2786 15.0242 6.29661C15.0242 6.39915 15.0242 6.51344 15.0242 6.62772C15.0242 7.72125 15.0312 8.81556 15.0218 9.90909C15.0148 10.7396 14.4754 11.2727 13.6927 11.2492C13.1306 11.232 12.6195 10.7858 12.5373 10.23C12.5146 10.0766 12.5083 9.91848 12.5083 9.7635C12.506 8.7091 12.5068 7.65393 12.5068 6.59954C12.5068 6.49465 12.5068 6.38976 12.5068 6.26295C11.6598 6.26295 10.8504 6.27234 10.0411 6.2606C9.21758 6.24808 8.64381 5.57724 8.79723 4.77647C8.8442 4.53381 8.98353 4.27315 9.15731 4.09546C10.38 2.84616 11.6176 1.61173 12.8637 0.38591C13.0312 0.221529 13.2676 0.127595 13.4727 0.00157024C13.6676 4.32235e-06 13.8625 5.29306e-06 14.0582 5.31017e-06Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M13.7629 29.9997C10.1504 29.9997 6.53795 30.0004 2.92547 29.9996C1.23312 29.9996 0.00573741 28.784 0.00338961 27.0917C-0.00130785 23.1958 -0.00130751 19.3 0.00339063 15.4049C0.00573873 13.7212 1.24173 12.4899 2.92939 12.4891C10.1544 12.486 17.3793 12.486 24.6043 12.4891C26.2896 12.4899 27.5248 13.7251 27.5264 15.4088C27.5303 19.3047 27.5303 23.2005 27.5264 27.0956C27.5248 28.7856 26.2958 29.9989 24.6004 29.9997C20.9879 29.9997 17.3754 29.9997 13.7629 29.9997ZM18.1284 21.2522C18.13 18.8428 16.1629 16.8718 13.7598 16.8749C11.3559 16.8781 9.39271 18.8554 9.40211 21.2632C9.4115 23.6741 11.3496 25.6091 13.7551 25.6114C16.1778 25.6138 18.1269 23.671 18.1284 21.2522ZM22.2137 20.327C21.9898 20.327 21.7652 20.3207 21.5413 20.3285C21.0552 20.3442 20.6795 20.7183 20.656 21.2029C20.6317 21.7015 20.9777 22.1312 21.4763 22.161C21.9617 22.1892 22.4517 22.19 22.937 22.1602C23.4372 22.1297 23.7761 21.7007 23.7487 21.1966C23.7221 20.7137 23.3456 20.3434 22.8571 20.3285C22.6427 20.3215 22.4282 20.327 22.2137 20.327ZM5.34501 20.327C5.12114 20.327 4.89648 20.3215 4.67261 20.3277C4.18416 20.3426 3.80765 20.7121 3.78104 21.1958C3.75364 21.696 4.09728 22.1289 4.59433 22.1594C5.07965 22.1892 5.56967 22.1884 6.05498 22.1602C6.55674 22.1305 6.89803 21.7054 6.87376 21.2021C6.85028 20.7183 6.47377 20.3434 5.98845 20.3277C5.77397 20.3215 5.55949 20.327 5.34501 20.327Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}
const InitialBalanceIcon = {
  name: "InitialBalanceIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "20",
            height: "20",
            viewBox: "0 0 41 20",
            fill: "none",
            stroke: "currentColor",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather feather-initial-balance",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M13.7629 17.5129C10.1504 17.5129 6.53795 17.5137 2.92547 17.5129C1.23312 17.5129 0.00573747 16.2973 0.00338931 14.6049C-0.00130697 10.7091 -0.00130663 6.81321 0.00339033 2.91815C0.00573879 1.23441 1.24173 0.00311469 2.92938 0.00233207C10.1544 -0.00079838 17.3793 -0.000797749 24.6043 0.00233396C26.2896 0.00311688 27.5248 1.23833 27.5264 2.92207C27.5303 6.81791 27.5303 10.7138 27.5264 14.6088C27.5248 16.2988 26.2958 17.5121 24.6004 17.5129C20.9879 17.5129 17.3754 17.5129 13.7629 17.5129ZM18.1284 8.76544C18.13 6.35608 16.1629 4.38506 13.7598 4.38819C11.3559 4.39132 9.39271 6.3686 9.40211 8.7764C9.4115 11.1873 11.3496 13.1223 13.7551 13.1247C16.1778 13.127 18.1269 11.1842 18.1284 8.76544ZM22.2137 7.84021C21.9898 7.84021 21.7652 7.83395 21.5413 7.84177C21.0552 7.85743 20.6795 8.23159 20.656 8.71613C20.6317 9.21475 20.9777 9.64449 21.4763 9.67424C21.9617 9.70242 22.4517 9.7032 22.937 9.67346C23.4372 9.64293 23.7761 9.21397 23.7487 8.70987C23.7221 8.2269 23.3456 7.85665 22.8571 7.84177C22.6427 7.83473 22.4282 7.84021 22.2137 7.84021ZM5.34501 7.84021C5.12114 7.84021 4.89648 7.83473 4.67261 7.84099C4.18416 7.85586 3.80765 8.22533 3.78104 8.70908C3.75364 9.20927 4.09728 9.64214 4.59433 9.67267C5.07965 9.70242 5.56967 9.70163 6.05498 9.67345C6.55674 9.64371 6.89803 9.21866 6.87376 8.71534C6.85028 8.23159 6.47377 7.85665 5.98845 7.84099C5.77397 7.83473 5.55949 7.84021 5.34501 7.84021Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const BalanceIcon = {
  name: "BalanceIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "20",
            height: "20",
            viewBox: "0 0 41 20",
            fill: "none",
            stroke: "currentColor",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather feather-balance",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M34.9997 16.0552C34.8043 16.6662 34.6737 17.3085 34.4002 17.8833C33.3489 20.0897 30.8557 21.3658 28.4987 20.957C25.973 20.5176 24.0983 18.5885 23.7847 16.1038C23.6465 15.0088 23.6656 14.9868 24.7731 14.9868C27.9602 14.9868 31.1473 14.9878 34.3344 14.9849C34.5918 14.9849 34.8358 14.9973 34.9997 15.2356C34.9997 15.5082 34.9997 15.7817 34.9997 16.0552Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M5.62412 8.23043C4.79589 9.54473 3.9953 10.8142 3.1947 12.0838C2.84873 12.6327 2.50371 13.1817 2.15679 13.7297C1.83941 14.2301 1.43435 14.3816 1.05979 14.1415C0.662351 13.886 0.620415 13.4667 0.948277 12.9463C2.21493 10.9334 3.48253 8.92141 4.74919 6.90945C4.80733 6.81605 4.85879 6.71883 4.92551 6.60065C4.84164 6.58063 4.79017 6.56634 4.7368 6.55585C4.13063 6.43958 3.77704 5.97542 3.82183 5.35496C3.86186 4.79455 4.32316 4.36661 4.92551 4.36566C7.50075 4.35994 10.076 4.35708 12.6503 4.36947C12.9448 4.37138 13.1278 4.28084 13.306 4.054C13.671 3.58985 14.1476 3.25627 14.7061 3.05898C14.9158 2.98464 15.0034 2.86074 15.0406 2.64439C15.2398 1.51593 16.2901 0.665778 17.4824 0.652435C18.6709 0.639092 19.7546 1.50545 19.9538 2.64534C19.9919 2.86169 20.0824 2.98273 20.2902 3.05803C20.8802 3.27247 21.3748 3.63178 21.7551 4.13311C21.8847 4.30371 22.0267 4.36661 22.2431 4.36566C24.8298 4.35804 27.4155 4.35804 30.0022 4.3628C30.7303 4.36375 31.2012 4.8403 31.1754 5.52747C31.1573 6.02022 30.8066 6.44053 30.3224 6.54823C30.2481 6.56443 30.1737 6.57777 30.067 6.59779C30.1366 6.71978 30.188 6.817 30.2462 6.9104C31.5128 8.92332 32.7833 10.9334 34.0423 12.9511C34.1519 13.1274 34.2358 13.3409 34.2577 13.5458C34.2901 13.847 34.1119 14.07 33.8374 14.1844C33.5629 14.2997 33.296 14.2568 33.0816 14.0404C32.9787 13.9366 32.8919 13.8136 32.8138 13.6897C31.7435 11.997 30.677 10.3024 29.6085 8.6088C29.5361 8.49443 29.4637 8.38101 29.3712 8.2371C29.2855 8.36672 29.2159 8.46489 29.152 8.56687C28.0712 10.2796 26.9904 11.9923 25.9087 13.705C25.8477 13.8012 25.7895 13.9003 25.7161 13.9871C25.4845 14.2616 25.1214 14.3273 24.8241 14.1567C24.5286 13.9871 24.3856 13.6325 24.5 13.3047C24.5477 13.1674 24.6277 13.0387 24.7059 12.9139C25.942 10.9496 27.181 8.98622 28.4181 7.02287C28.4963 6.89896 28.5706 6.77411 28.6707 6.61113C25.4102 6.61113 22.1935 6.61113 18.954 6.61113C18.954 13.6716 18.954 20.7282 18.954 27.8354C19.4382 27.8354 19.9233 27.824 20.4074 27.8383C20.884 27.8526 21.3739 27.8278 21.8323 27.9345C22.9913 28.2033 23.6737 29.0887 23.7547 30.3478C19.5907 30.3478 15.4285 30.3478 11.2664 30.3478C11.1901 29.1821 12.1995 27.9803 13.3622 27.8945C14.099 27.8402 14.8405 27.8526 15.5801 27.8364C15.7259 27.8335 15.8727 27.8364 16.0414 27.8364C16.0414 20.7511 16.0414 13.6926 16.0414 6.60923C12.8237 6.60923 9.60612 6.60923 6.33131 6.60923C6.41232 6.74742 6.47427 6.85989 6.54194 6.96854C7.79144 8.95191 9.0438 10.9334 10.2866 12.9196C10.3972 13.0969 10.4868 13.3056 10.5173 13.5105C10.564 13.827 10.3915 14.0605 10.1027 14.1834C9.81484 14.3054 9.54131 14.2568 9.32114 14.0242C9.2287 13.9261 9.15149 13.8107 9.07811 13.6964C8.00207 11.9942 6.92794 10.29 5.85381 8.58688C5.789 8.47823 5.71848 8.37434 5.62412 8.23043Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M5.63938 14.9859C7.29013 14.9859 8.94087 14.985 10.5916 14.9859C11.1835 14.9859 11.294 15.1032 11.2635 15.6903C11.1177 18.4704 8.918 20.7416 6.12927 20.9913C3.24999 21.2487 0.645206 19.2929 0.0914623 16.448C0.0314179 16.1373 0.0133092 15.817 0.000919102 15.4997C-0.0124241 15.1384 0.118149 15.0022 0.482228 14.9907C0.880618 14.9783 1.27901 14.9869 1.6774 14.9869C2.99742 14.9859 4.3184 14.9859 5.63938 14.9859Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}
const IncomesIconB = {
  name: "IncomesIconB",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "44",
            height: "54",
            viewBox: "0 0 100 100",
            fill: "none",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather feather-amg",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M118.945,25.02378,94.6602,27.111a.63822.63822,0,0,0-.38324,1.10016l6.12605,5.77767-1.35983,1.38795-.90738.926-4.606,4.78165q-2.66223,2.80594-5.30318,5.62517-1.89191,2.02762-3.76253,4.07917-4.47829,4.90137-8.8422,9.91453c-1.44753,1.67638-2.88975,3.36073-4.31068,5.06373-.37784.45235-.75037.91-1.12556,1.365l-1.51938-.85416L44.96023,52.952,41.1764,50.826l-2.71146,2.95362-3.39266,3.696L8.36209,86.56995l5.6092,5.47084,28.90012-27.889h.00266L59.79213,75.15731l8.65062,5.62783,3.13721,2.04091.71844.46566,4.08182-3.57626q2.5066-2.19925,4.936-4.47032c1.62583-1.5114,3.22769-3.04142,4.82423-4.57677q4.78168-4.618,9.42229-9.36373c3.10794-3.15318,6.15734-6.36223,9.19876-9.57661l4.52621-4.85882.612-.66788,1.60036-1.74654,5.84915,5.51652a.63822.63822,0,0,0,1.07528-.43187L119.63707,25.692A.63819.63819,0,0,0,118.945,25.02378Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M14.0931,124.06753a2.09074,2.09074,0,0,0,2.08768,2.0877H30.65223a2.09077,2.09077,0,0,0,2.0877-2.0877V81.84173L14.0931,99.83615Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M39.95192,74.88121v49.18632a2.09074,2.09074,0,0,0,2.08768,2.0877H56.51105a2.09076,2.09076,0,0,0,2.08768-2.0877V81.17272L43.565,71.39382Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M72.814,90.41072,65.81074,85.8629v38.20463a2.09074,2.09074,0,0,0,2.08768,2.0877H82.36987a2.09076,2.09076,0,0,0,2.08768-2.0877V80.10042c-1.3902,1.28819-2.84447,2.59775-4.32245,3.89543Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M99.617,65.30158c-2.86583,2.918-5.48492,5.53-7.94743,7.9332v50.83275a2.09074,2.09074,0,0,0,2.08768,2.0877h14.47145a2.09076,2.09076,0,0,0,2.08768-2.0877V54.11823l-1.41867,1.52306C105.95833,58.74673,102.82206,62.05143,99.617,65.30158Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M72.25548,39.621q-1.34492.98588-5.01058.98993a22.1044,22.1044,0,0,1-6.15064-.83982,31.45325,31.45325,0,0,1-5.01062-1.86225l-2.58035,6.90124a40.84986,40.84986,0,0,0,4.05311,1.65128,27.96852,27.96852,0,0,0,7.10815,1.351v7.14062h7.56254V47.6299a15.90172,15.90172,0,0,0,4.94974-1.558,10.96664,10.96664,0,0,0,3.27007-2.58035,9.2677,9.2677,0,0,0,1.80139-3.266,12.13766,12.13766,0,0,0,.5396-3.57033,10.73107,10.73107,0,0,0-.92909-4.617,10.59266,10.59266,0,0,0-2.58037-3.44859,18.25977,18.25977,0,0,0-3.89894-2.61282,44.11272,44.11272,0,0,0-4.89293-2.10565q-1.74054-.60254-2.96985-1.11168a13.189,13.189,0,0,1-2.06914-1.0508,3.62306,3.62306,0,0,1-1.22934-1.22932,3.27232,3.27232,0,0,1-.39353-1.65124,3.0231,3.0231,0,0,1,1.26177-2.51951,6.92631,6.92631,0,0,1,4.14238-.96156,24.34767,24.34767,0,0,1,5.48932.60046,27.7658,27.7658,0,0,1,4.58867,1.44029l1.86223-7.20148A24.07539,24.07539,0,0,0,77.59879,8.9854a34.19813,34.19813,0,0,0-5.3717-.90071V1.84477H64.66455V8.32814a15.06548,15.06548,0,0,0-4.56026,1.52952,9.86878,9.86878,0,0,0-4.8889,5.87883,12.70566,12.70566,0,0,0-.572,3.80969,9.21034,9.21034,0,0,0,3.39179,7.5017,15.757,15.757,0,0,0,3.42018,2.13q1.89269.87026,3.87055,1.59042c1.35915.48282,2.56008.92909,3.60276,1.351A15.53469,15.53469,0,0,1,71.509,33.40951a5.34412,5.34412,0,0,1,1.558,1.46872,3.43251,3.43251,0,0,1,.5396,1.95148A3.25988,3.25988,0,0,1,72.25548,39.621Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const ServiceProduct = {
  name: "ServiceProduct",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "44",
            height: "54",
            viewBox: "0 0 50 50",
            fill: "none",
            // "stroke-width": "2",
            // "stroke-linecap": "round",
            // "stroke-linejoin": "round",
          },
          class: "feather service-product",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M30.0361 1H4.03613C3.48384 1 3.03613 1.44772 3.03613 2V19C3.03613 19.5523 3.48384 20 4.03613 20H30.0361C30.5884 20 31.0361 19.5523 31.0361 19V2C31.0361 1.44772 30.5884 1 30.0361 1ZM4.03613 0C2.93156 0 2.03613 0.89543 2.03613 2V19C2.03613 20.1046 2.93156 21 4.03613 21H30.0361C31.1407 21 32.0361 20.1046 32.0361 19V2C32.0361 0.895431 31.1407 0 30.0361 0H4.03613Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M32.0361 23H2.03613V22H32.0361V23Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M4.39764 29.3603C2.51844 28.2079 1.72946 26.0103 1.8796 22.1845L2.87883 22.2237C2.7326 25.9499 3.52207 27.6503 4.92042 28.5078C5.65016 28.9553 6.59878 29.2099 7.80011 29.3471C9.0008 29.4843 10.4078 29.5 12.0361 29.5L12.0361 30.5C10.4144 30.5 8.95228 30.4852 7.68662 30.3407C6.4216 30.1962 5.30667 29.9178 4.39764 29.3603Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M29.0844 29.156C30.9293 27.9668 31.8485 25.8787 32.0353 22.5278L31.0369 22.4722C30.8579 25.6828 29.9966 27.3783 28.5426 28.3155C27.0341 29.2879 24.7703 29.5337 21.5413 29.5L21.5309 30.5C24.7408 30.5335 27.2942 30.31 29.0844 29.156Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M11.5361 34.1649V30H12.5361V34.1649C12.5361 35.4889 13.138 36.7412 14.1719 37.5683C14.5733 37.8895 15.0285 38.1371 15.5163 38.2997L16.0572 38.48C17.002 38.7949 18.0279 38.7648 18.9526 38.3949L18.9803 38.3838C19.4915 38.1793 19.9559 37.8731 20.3453 37.4838C21.1078 36.7213 21.5361 35.6871 21.5361 34.6088V30H22.5361V34.6088C22.5361 35.9523 22.0024 37.2408 21.0524 38.1909C20.5673 38.676 19.9887 39.0575 19.3517 39.3123L19.324 39.3234C18.1797 39.7811 16.9102 39.8184 15.7409 39.4286L15.2 39.2484C14.6004 39.0485 14.0408 38.744 13.5472 38.3491C12.2761 37.3323 11.5361 35.7927 11.5361 34.1649Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M17 35C17.5523 35 18 34.5523 18 34C18 33.4477 17.5523 33 17 33C16.4477 33 16 33.4477 16 34C16 34.5523 16.4477 35 17 35ZM17 36C18.1046 36 19 35.1046 19 34C19 32.8954 18.1046 32 17 32C15.8954 32 15 32.8954 15 34C15 35.1046 15.8954 36 17 36Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const CustomAppIcon = {
  name: "CustomAppIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "35",
            height: "35",
            viewBox: "0 0 16 16",
            fill: "none",
            stroke: "currentColor",
          },
          class: "feather feather-custom-app-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M0 7.99315C0 6.47129 0 4.94944 0 3.42759C0 1.41217 1.41338 0 3.41681 0C6.47685 0 9.52316 0 12.5832 0C14.5866 0 16 1.41217 16 3.42759C16 6.485 16 9.52871 16 12.5861C16 14.5741 14.5866 16 12.5969 16C9.53688 16 6.46312 16 3.40309 16C1.41338 16 0 14.5741 0 12.5861C0 11.0643 0 9.52871 0 7.99315ZM8.01372 3.86632C7.95884 3.79777 7.93139 3.75664 7.91767 3.72922C7.6295 3.3042 7.21784 3.1671 6.8199 3.40017C6.42196 3.63325 6.3259 4.08569 6.5729 4.53813C6.71012 4.78492 6.87479 5.018 6.98456 5.27849C7.02573 5.37446 7.03945 5.53899 6.98456 5.62125C6.36707 6.71808 5.73585 7.81491 5.09091 8.91174C5.03602 9.00771 4.8988 9.07626 4.78902 9.08998C4.34992 9.10369 3.92453 9.08998 3.48542 9.10369C3.06004 9.1174 2.74443 9.37789 2.67581 9.76178C2.62093 10.0771 2.79931 10.4473 3.1012 10.5707C3.26587 10.6392 3.44426 10.6667 3.62264 10.6667C5.44769 10.6667 7.27273 10.6667 9.09777 10.6667C9.1801 10.6667 9.26244 10.6667 9.38594 10.6667C9.15266 10.2691 8.91938 9.94002 8.76844 9.56984C8.59005 9.15853 8.31561 9.03513 7.89022 9.07626C7.54717 9.1174 7.1904 9.08998 6.80618 9.08998C6.88851 8.95287 6.92968 8.87061 6.97084 8.78835C7.76672 7.4036 8.57633 6.00514 9.37221 4.62039C9.4271 4.52442 9.48199 4.42845 9.52316 4.31877C9.70155 3.81148 9.33105 3.3042 8.79589 3.3042C8.42539 3.29049 8.20583 3.52356 8.01372 3.86632ZM9.27616 6.07369C8.97427 6.59469 8.71355 7.04713 8.45283 7.52699C8.41166 7.59555 8.42539 7.71894 8.46655 7.77378C9.33105 9.28192 10.2093 10.8038 11.0875 12.3119C11.211 12.5313 11.4031 12.6821 11.6775 12.7095C11.9794 12.7369 12.2401 12.641 12.4185 12.3805C12.5969 12.1337 12.6106 11.8595 12.4734 11.5853C12.3088 11.2836 12.1441 10.9957 11.9657 10.6667C12.1715 10.6667 12.3362 10.6667 12.4871 10.6667C13.0086 10.653 13.3654 10.3239 13.3654 9.87147C13.3654 9.41902 13.0086 9.10369 12.5009 9.08998C12.1166 9.07626 11.7187 9.07626 11.3345 9.08998C11.1149 9.10369 10.9914 9.03513 10.8954 8.84319C10.3602 7.92459 9.82504 7.01971 9.27616 6.07369ZM5.53002 11.2973C4.93997 11.2973 4.39108 11.2973 3.8422 11.2973C3.78731 11.2973 3.7187 11.3385 3.67753 11.3796C3.36192 11.7498 3.41681 12.2845 3.77359 12.5587C4.14408 12.8466 4.6518 12.7506 4.92625 12.3256C5.13208 11.9966 5.31046 11.6675 5.53002 11.2973Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const CustomPlusIcon = {
  name: "CustomPlusIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "35",
            height: "35",
            viewBox: "0 0 15 15",
            fill: "none",
            stroke: "currentColor",
          },
          class: "feather feather-custom-plus-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M0 7.5C-1.46764e-08 6.51509 0.193993 5.53982 0.570903 4.62987C0.947814 3.71993 1.50026 2.89314 2.1967 2.1967C2.89314 1.50026 3.71993 0.947814 4.62987 0.570904C5.53982 0.193993 6.51509 0 7.5 0C8.48491 0 9.46018 0.193993 10.3701 0.570904C11.2801 0.947814 12.1069 1.50026 12.8033 2.1967C13.4997 2.89314 14.0522 3.71993 14.4291 4.62987C14.806 5.53982 15 6.51509 15 7.5C15 9.48912 14.2098 11.3968 12.8033 12.8033C11.3968 14.2098 9.48912 15 7.5 15C5.51088 15 3.60322 14.2098 2.1967 12.8033C0.790176 11.3968 2.96403e-08 9.48912 0 7.5V7.5ZM7.5 3.75C7.33424 3.75 7.17527 3.81585 7.05806 3.93306C6.94085 4.05027 6.875 4.20924 6.875 4.375V6.875H4.375C4.20924 6.875 4.05027 6.94085 3.93306 7.05806C3.81585 7.17527 3.75 7.33424 3.75 7.5C3.75 7.66576 3.81585 7.82473 3.93306 7.94194C4.05027 8.05915 4.20924 8.125 4.375 8.125H6.875V10.625C6.875 10.7908 6.94085 10.9497 7.05806 11.0669C7.17527 11.1842 7.33424 11.25 7.5 11.25C7.66576 11.25 7.82473 11.1842 7.94194 11.0669C8.05915 10.9497 8.125 10.7908 8.125 10.625V8.125H10.625C10.7908 8.125 10.9497 8.05915 11.0669 7.94194C11.1842 7.82473 11.25 7.66576 11.25 7.5C11.25 7.33424 11.1842 7.17527 11.0669 7.05806C10.9497 6.94085 10.7908 6.875 10.625 6.875H8.125V4.375C8.125 4.20924 8.05915 4.05027 7.94194 3.93306C7.82473 3.81585 7.66576 3.75 7.5 3.75Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const CustomCardIcon = {
  name: "CustomCardIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "35",
            height: "35",
            viewBox: "0 0 18 14",
            fill: "none",
            stroke: "currentColor",
          },
          class: "feather feather-custom-card-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M17.3571 0H0.642857C0.287277 0 0 0.282528 0 0.632231V3.79339H18V0.632231C18 0.282528 17.7127 0 17.3571 0ZM0 13.2769C0 13.6266 0.287277 13.9091 0.642857 13.9091H17.3571C17.7127 13.9091 18 13.6266 18 13.2769V5.53202H0V13.2769ZM11.6317 9.64153C11.6317 9.5546 11.704 9.48347 11.7924 9.48347H15.1071C15.1955 9.48347 15.2679 9.5546 15.2679 9.64153V11.064C15.2679 11.151 15.1955 11.2221 15.1071 11.2221H11.7924C11.704 11.2221 11.6317 11.151 11.6317 11.064V9.64153Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const CustomDollarIcon = {
  name: "CustomDollarIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "35",
            height: "35",
            viewBox: "0 0 12 23",
            fill: "none",
            stroke: "currentColor",
          },
          class: "feather feather-custom-dollar-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M8.71702 10.4848L4.21605 9.06523C3.69511 8.90352 3.33253 8.37793 3.33253 7.79395C3.33253 7.06172 3.88265 6.46875 4.56196 6.46875H7.32506C7.8335 6.46875 8.33361 6.63496 8.75036 6.94043C9.00458 7.12461 9.34632 7.07969 9.56304 6.85059L11.0133 5.32324C11.3092 5.01328 11.2676 4.49668 10.9383 4.22266C9.91728 3.36016 8.642 2.87949 7.33339 2.875V0.71875C7.33339 0.323437 7.03333 0 6.66658 0H5.33296C4.96622 0 4.66615 0.323437 4.66615 0.71875V2.875H4.56196C1.90723 2.875 -0.226567 5.33223 0.0193195 8.24766C0.194357 10.3186 1.66134 12.0031 3.51174 12.5871L7.78349 13.9348C8.30443 14.101 8.66701 14.6221 8.66701 15.2061C8.66701 15.9383 8.11689 16.5312 7.43758 16.5312H4.67449C4.16604 16.5312 3.66594 16.365 3.24918 16.0596C2.99496 15.8754 2.65322 15.9203 2.43651 16.1494L0.986194 17.6768C0.690297 17.9867 0.731973 18.5033 1.06121 18.7773C2.08226 19.6398 3.35754 20.1205 4.66615 20.125V22.2812C4.66615 22.6766 4.96622 23 5.33296 23H6.66658C7.03333 23 7.33339 22.6766 7.33339 22.2812V20.116C9.27547 20.0756 11.0967 18.8313 11.7385 16.8502C12.6345 14.083 11.13 11.2439 8.71702 10.4848Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const CustomPencilIcon = {
  name: "CustomPencilIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "35",
            height: "35",
            viewBox: "0 0 17 17",
            fill: "none",
            stroke: "currentColor",
          },
          class: "feather feather-custom-pencil-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M1.35759 10.7486L0.412327 14.8282C0.379718 14.9773 0.380836 15.1318 0.415599 15.2805C0.450361 15.4291 0.517889 15.5681 0.613251 15.6873C0.708613 15.8065 0.829399 15.9029 0.966786 15.9694C1.10417 16.036 1.25469 16.071 1.40734 16.0719C1.47847 16.0791 1.55014 16.0791 1.62127 16.0719L5.72569 15.1267L13.6062 7.27601L9.20824 2.888L1.35759 10.7486Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M16.0843 3.34574L13.149 0.410448C12.956 0.218443 12.6949 0.110657 12.4226 0.110657C12.1504 0.110657 11.8893 0.218443 11.6963 0.410448L10.0645 2.04227L14.4574 6.43525L16.0893 4.80343C16.1848 4.70745 16.2604 4.59358 16.3118 4.46834C16.3633 4.3431 16.3895 4.20894 16.389 4.07355C16.3886 3.93816 16.3614 3.80418 16.3091 3.6793C16.2568 3.55441 16.1804 3.44106 16.0843 3.34574Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const CustomDocumentIcon = {
  name: "CustomDocumentIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "35",
            height: "35",
            viewBox: "0 0 12 16",
            fill: "none",
            stroke: "currentColor",
          },
          class: "feather feather-custom-document-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M7.1679 0C7.1679 0.491416 7.1679 0.965887 7.1679 1.42341C7.1679 1.96567 7.20179 2.50792 7.1679 3.05017C7.11707 3.72799 7.64237 4.49053 8.59132 4.49053C9.50637 4.49053 10.4384 4.49053 11.3534 4.49053C11.4381 4.49053 11.5059 4.49053 11.6415 4.49053C11.6415 4.60915 11.6415 4.69387 11.6415 4.79555C11.6415 7.81182 11.6245 10.8112 11.6584 13.8274C11.6584 14.7086 10.9976 15.3186 10.1672 15.3017C7.26957 15.2847 4.38886 15.2847 1.4912 15.3017C0.677819 15.3017 0 14.7086 0 13.8274C0.0169454 9.70971 0.0169454 5.59198 0 1.47425C0 0.593089 0.677818 0 1.47425 0C3.28741 0.0338908 5.08362 0 6.89678 0C6.96456 0 7.04929 0 7.1679 0ZM5.79533 9.01495C6.67649 9.01495 7.5407 9.01495 8.42186 9.01495C8.72688 9.01495 8.94717 8.79466 8.94717 8.54048C8.94717 8.2863 8.72688 8.0999 8.42186 8.0999C6.67649 8.0999 4.91417 8.0999 3.16879 8.0999C3.01628 8.0999 2.82988 8.20157 2.74516 8.32019C2.52487 8.6252 2.77904 8.998 3.20268 8.998C4.06689 9.01495 4.93111 9.01495 5.79533 9.01495ZM5.77838 7.21874C6.65954 7.21874 7.52375 7.21874 8.40491 7.21874C8.72688 7.21874 8.94717 7.03234 8.94717 6.76121C8.94717 6.52398 8.72688 6.30369 8.43881 6.30369C6.67649 6.30369 4.91416 6.30369 3.15184 6.30369C2.99934 6.30369 2.81294 6.4223 2.72821 6.54092C2.50792 6.84594 2.7621 7.21874 3.18574 7.21874C4.0669 7.21874 4.91416 7.21874 5.77838 7.21874ZM5.81227 10.7942C6.69343 10.7942 7.55765 10.7942 8.43881 10.7942C8.72688 10.7942 8.94717 10.5909 8.94717 10.3367C8.94717 10.0995 8.72688 9.89611 8.43881 9.87916C8.38797 9.87916 8.33714 9.87916 8.26935 9.87916C6.62565 9.87916 4.965 9.87916 3.3213 9.87916C3.27046 9.87916 3.21963 9.87916 3.15184 9.87916C2.86377 9.89611 2.64348 10.0995 2.64348 10.3536C2.64348 10.6078 2.86377 10.7942 3.16879 10.7942C4.04995 10.8112 4.93111 10.7942 5.81227 10.7942ZM4.89722 12.5904C5.45641 12.5904 6.01562 12.5904 6.57481 12.5904C6.93067 12.5904 7.1679 12.404 7.1679 12.1329C7.1679 11.8618 6.93066 11.6754 6.59176 11.6754C5.47336 11.6754 4.35497 11.6754 3.23657 11.6754C2.89766 11.6754 2.67737 11.8618 2.66043 12.1329C2.66043 12.404 2.88072 12.5904 3.23657 12.5904C3.79577 12.5904 4.33802 12.5904 4.89722 12.5904Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M8.03223 0.305016C9.13368 1.40647 10.2012 2.49097 11.2857 3.57548C11.218 3.57548 11.1671 3.59242 11.0993 3.59242C10.2521 3.59242 9.4048 3.59242 8.55753 3.59242C8.23557 3.59242 8.04917 3.42297 8.03223 3.10101C8.03223 2.18595 8.03223 1.25396 8.03223 0.305016Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

const CustomSendIcon = {
  name: "CustomSendIcon",
  props: {
    size: {
      type: String,
      default: "18",
      validator: function validator(s) {
        return (
          !isNaN(s) ||
          (s.length >= 2 &&
            !isNaN(s.slice(0, s.length - 1)) &&
            s.slice(-1) === "x")
        )
      },
    },
  },
  functional: true,
  render: function render(h, ctx) {
    const size =
      ctx.props.size.slice(-1) === "x"
        ? `${ctx.props.size.slice(0, ctx.props.size.length - 1)}em`
        : `${parseInt(ctx.props.size)}px`
    const attrs = ctx.data.attrs || {}
    attrs.width = attrs.width || size
    attrs.height = attrs.height || size
    ctx.data.attrs = attrs
    return h(
      "svg",
      _mergeJSXProps([
        {
          attrs: {
            xmlns: "http://www.w3.org/2000/svg",
            width: "35",
            height: "35",
            viewBox: "0 0 16 15",
            fill: "none",
            stroke: "currentColor",
          },
          class: "feather feather-custom-send-icon",
        },
        ctx.data,
      ]),
      [
        h("path", {
          attrs: {
            d: "M6.36035 10.6848C8.52468 8.06075 10.689 5.4559 12.8533 2.85105C12.8342 2.8319 12.8342 2.8319 12.815 2.81275C12.2979 3.25327 11.7616 3.6938 11.2444 4.15348C9.02266 6.04965 6.80088 7.94583 4.59825 9.86116C4.46418 9.97608 4.34926 10.0144 4.17688 9.93777C2.93191 9.49725 1.68695 9.07588 0.441982 8.6545C0.212143 8.57789 0.0206096 8.44382 0.00145625 8.17567C-0.0176971 7.90753 0.154683 7.7543 0.365369 7.63938C5.17285 5.1303 9.96117 2.62121 14.7687 0.11213C14.9793 -0.00278992 15.19 -0.0602481 15.3816 0.0929784C15.5922 0.246205 15.5922 0.456889 15.5539 0.686729C15.3241 2.27645 15.0943 3.84702 14.8453 5.43675C14.558 7.35208 14.2707 9.24826 13.9834 11.1636C13.9259 11.6041 13.8684 12.0446 13.7918 12.466C13.7344 12.9065 13.4662 13.0789 13.0449 12.9257C10.8614 12.217 8.62044 11.4509 6.36035 10.6848Z",
            fill: "currentColor",
          },
        }),
        h("path", {
          attrs: {
            d: "M5.69043 11.4892C6.57148 11.7956 7.43338 12.0829 8.33359 12.3894C7.72068 13.213 7.14608 14.0174 6.55233 14.8219C6.41826 14.9943 6.22672 15.0326 6.03519 14.9751C5.8245 14.9176 5.70958 14.7644 5.70958 14.5346C5.69043 13.5194 5.69043 12.5235 5.69043 11.4892Z",
            fill: "currentColor",
          },
        }),
      ]
    )
  },
}

exports.MessengerIcon = MessengerIcon
exports.ComissionsIcon = ComissionsIcon
exports.UsersAmgIcon = UsersAmgIcon
exports.AmgIcon = AmgIcon
exports.DashboardIcon = DashboardIcon
exports.QuestionIcon = QuestionIcon
exports.PhoneSlashIcon = PhoneSlashIcon
exports.ThListIcon = ThListIcon
exports.Edit2SlashIcon = Edit2SlashIcon
exports.OtherSourcesIcon = OtherSourcesIcon
exports.ValidationInformationIcon = ValidationInformationIcon
exports.CRInvalidIcon = CRInvalidIcon
exports.FilePdfIcon = FilePdfIcon
exports.FileExcelIcon = FileExcelIcon
exports.FileCsvIcon = FileCsvIcon
exports.FilePowerpointIcon = FilePowerpointIcon
exports.FileWordIcon = FileWordIcon
exports.FileChartIcon = FileChartIcon
exports.CustomFolderIcon = CustomFolderIcon
exports.CustomFileIcon = CustomFileIcon
exports.IncomesIcon = IncomesIcon
exports.InitialBalanceIcon = InitialBalanceIcon
exports.BalanceIcon = BalanceIcon
exports.IncomesIconB = IncomesIconB
exports.ServiceProduct = ServiceProduct
exports.CustomPlusIcon = CustomPlusIcon
exports.CustomAppIcon = CustomAppIcon
exports.CustomCardIcon = CustomCardIcon
exports.CustomDollarIcon = CustomDollarIcon
exports.CustomPencilIcon = CustomPencilIcon
exports.CustomDocumentIcon = CustomDocumentIcon
exports.CustomSendIcon = CustomSendIcon
